<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>프로그래밍 학습목차.</title>
      <link href="/2020/01/15/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B0%9C%EA%B4%84/%ED%95%99%EC%8A%B5%EB%AA%A9%EC%B0%A8/"/>
      <url>/2020/01/15/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B0%9C%EA%B4%84/%ED%95%99%EC%8A%B5%EB%AA%A9%EC%B0%A8/</url>
      
        <content type="html"><![CDATA[<pre>대분류부터 소분류에 이르기까지 개발을 위한 영역들을 분류해볼 생각이다.먼저 처음에는 여러 의견(생각)들을 쏟아낸 후에 쳬계적으로 정리하는 노력 해보도록 하겠다.개발과 관계되는 것은 대략하드웨어소프트웨어 언어 알고리즘 자료구조 OS 네트워크 보안 수학 전자회로서버프론트백엔드DB라이브러리프레임워크API뭐 이런 것들이 생각난다.(하 뭔가 막막하고 어떻게 정리할지 잘 모르겠네)일단 내가 조금이라도 배우고 경험했던 것들을 나열해보면Java(백언어)C(백언어)Jquery(js 라이브러리)spring(프레임워크)html(백언어)sql(oracle, mysql)javascript(프론트언어)뭐 이런 것들인데..책과 기억을 더듬어서내가 아는 것, 내가 모르는 것(이건 잘 적을 수 있으려나)가물가물하거나 까먹은 것등을 한 번 적어보자.Java는 Java의 정석js는 프론트엔드 개발자를 위한 자바스크립트 프로그래밍이라는 긴 제목의 책이다.자바의 정석.1. 자바 개념 : 자바는 OS에 의존적이지 않고, JVM을 통해개발할 수 있는 등의 특징이 있다.(대충 안다.)2. 변수 :- 변수와 상수 => 안다.- 변수의 타입 => 안다.(기본타입과 레퍼런스타입의 차이와 종류. java에서 정의하는 메모리의 개념 등대략적으로 알고 있다. 스태틱, 힙, 클래스였나 여튼 세 가지 였는데)- 진법 => 안다. 아는 데 능숙하게 알지는 않는다.웹개발 실무에서는 진법과 보수를 신경써서 쓸일은 없었던 것 같다. // 진법이라는 파트가 실린 책을 자주 보는데..이는 컴퓨터는 기본법으로 2진법 기반이기 때문에 그렇고,음수나, 부동소수, 보수는 컴퓨터의 특성으로 기인한 표현방식이다.부동소수는 소수점 등을 표현하기 위해서보수는 양수음수 계산을 용이하게 하기 위해서 탄생했던 것 같다.- 형변환(캐스팅) => 안다.아는데 ()만을 이용한 캐스팅과 함수를 사용한 캐스팅과 데이터의 변경 가능성 등에 대해서는 케바케다.- 연산자 => 안다. 아는데 우선순위는 아리까리한 경우가 가끔 있다.아 하다 보니까..대부분 보거나 써본거라서 알긴 하는데..뭔가 확실하게 안다고 하기 힘들고,뭐가 핵심적인지, 뭐가 중요한지뭘 할 때 뭐가 필요한지가 아리까리한 것 같기도 하다.객체지향 개념, 오버라이딩, 오버로딩, 익셉션, 추상클래스, 인터페이스, 생성자, 접근제어자등등..아 지네릭스나, 쓰레드, 람다 스트림, I/O, 네트워킹 같은 것은 잘 모른다고 볼 수 있다.아 씨바 생각해보니까내가 실무에서라도 이런 개념들을 숙지하고,실제로 적용해서 짰는가 하면?아니다..거의가 복붙을 통해서 구현만 그럴듯하게 따라했을 뿐이다.실무에서 필요성이 있는 것조차어렵다거나 시간이 부족하다고제대로 처리 못한 것이 있다.익셉션 같은 것이 그런 것이다.js 책 같은 경우도 그 두꺼운 노란책을꽤나 많이 봤는데 아쉬운 점들이 많다.생각해보니 난 꽤나 핵심적이고 원론적인 것에 관심이 많다.근본적인 원인에 대해서 탐구하는 것을 즐겨한다.철학이라든가..프로그래밍에서는 Jquery, 프레임워크, 라이브러리 보다는js그리고 보다 저수준에 이르기 까지항상 왜라는 질문을 하면서뭔가 답답하고 궁금한게 있으면 못 견디는 것 같다.뭔지도 모르고 갖다 쓰기만 하는 것은성미에 안맞아서 하면 안되겠다.하지만 나는 너무 두서없고,너무 왔다갔다 하며,너무 잘 까먹는다.공부는 공부대로 하고,개인 프로젝트들을 해나가야겠다.일단 개인프로젝트로 계산기 같은 것을 만들어보자.</pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      <categories>
          
          <category> 프로그래밍개괄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>원칙(principles) -레이 달리오</title>
      <link href="/2020/01/15/%EB%8F%85%EC%84%9C/%EC%9B%90%EC%B9%99/"/>
      <url>/2020/01/15/%EB%8F%85%EC%84%9C/%EC%9B%90%EC%B9%99/</url>
      
        <content type="html"><![CDATA[<pre>레이 달리오의 원칙이란 책을 훑어보았다.좋은 책이라고 생각한다.좋은 책이지만 정독(세독)을 하기에는 길고 귀찮기도 하며,큰 원칙별로 읽고 흥미가 가거나 이해하고 싶은 부분은 세부항목을 읽고,조직의 운영과 관련된 부분은 당장에 조직과 관련된 일에는 관심이 없어서생략한 부분이 많다.독서라는 활용은 정신적으로 지식이나 지혜를 얻기 위해텍스트를 읽는 활동이라고 생각한다.지식을 얻기 위해서는스스로에게 자문해야 할 것이내가 필요로 하는 지식이 얼마나 있는가내가 재미있어하는 지식이 얼마나 있는가 이런 것이려나지혜를 얻기 위해서는메타인지를 사용하여책의 논리와 나의 논리그 전개되는 과정(패턴 및 알고리즘)에 대한 숙고가 있어야 하지 않나 싶다.레이 달리오는 투자자다.하지만 이 책은 투자에 대한 책이 아니고말 그대로원칙(책 제목 참 잘지었다.의사결정을 내리는 데 있어 판단의 지표가 될 수 있는 원칙,그 중에서도 조직을 운영하기 위한 원칙에 특화.)들과 원칙을 지정한 배경과 논리가 나타나 있다.현실적이며 합리적이고 자명하다.대부분은 그냥 상식적으로 생각하면'그래 맞는 말이지 하면서누구나 다 알고 있는 내용이잖아?그렇게 못해서 그렇지'라고 생각할 수도 있으나아닌 부분들도 좀 있고,이것을 직접 실행하며프로그램화까지 했다고 하면검증까지 되고 잘 활용한 셈이다.그 중에서 몇 가지 재미있는 점들이 있었다.- 극단적인 개방성과 진실성.- 신경과학의 활용.- 컴퓨터 프로그램과 알고리즘의 활용.- 명상(생각보다 잡스로 그렇고 명상을 하는 인사들이 많네대가리를 잘 굴리기 위한 하나의 방법이 될 수도 있긴 하겠다.) 등등이 있다. 뭐 근데 생각해보니 메타인지가 높으면 자연히 그렇게 될 것 같기는 하다. 저자는 감정과 이성을 이분법적으로 구분해서 사고하곤 하는데 감정에 휩쓸려 판단하고 행동하기 때문에 불합리한 판단과 행동을 하는 경우가 많다는 것 같다.예컨데 잘보이기 위한 행동,두려움을 피하기 위한 행동 등이다.대개의 경우에는 목표를 이루기 위한 직접적인 원인으로감정이 들어가는 경우는 거의 없을 것 같다.예컨데, 돈이 많이 벌고 싶다고 한다면,돈에 대한 욕심,투자 실패에 대한 두려움이런 것들은 실제로 돈을 벌게 하는 데는직접적으로는 아무 영향이 없다.돈을 버는 것은1. 사업2. 노동3. 투자이 세가지 활동이 다지 않을까 싶다.내가 벌고 싶다고 기도를 한다고 하는 게 아니라,돈이 되는 노동을 하던가돈이 되는 사업을 하던가돈이 되는 투자를 하던가이다.(물론 이때에 감정의 흐름을 파악해서 수요 공급에 적용시켜돈의 흐름을 예측하는 식으로 사용할 수 있지만,자신의 감정을 활용하는 것이 아니라,다른 사람의 감정을 분석하고 이용하는 것에 가깝다.)돈은 숫자이기 때문에돈을 벌고 싶다면,개인적으로 정석은 수(셈)에 밝은 게 정석이라고 본다.누구는 능력이 있고,누구는 힘들게 일하고,이딴건 사실 직접적인 관련이 없다.거래의 특성과 돈의 흐름 이런것들을 계산하는 게 정석이라고 본다.개인적으로는 돈은 그냥 숫자라고 생각한다.내가 피땀흘려 노가다해서 번 돈과술과 유흥을 즐기기 위한 돈은액수가 같아도 다른 돈인가?의미는 사람이 부여하는 것일 뿐교환가치로써는 통일된 가치를 지니고 있다.(물론 돈의 가치는 인플레이션 등에 따라 바뀌기도 한다만..)피같은 돈이라는 말은돈이 흐른다는 알고리즘의 맥락에서 보면일견 맞지만,돈에 감정을 넣는 것은 일견 맥락이 맞지 않는다.사실 엄밀히 말하면 돈이 많든 적든감정을 개입시킬 필요는 없다.뭐 여튼 저자는 대단한 양반이다.아이디어 성과주의로 표방되는극단적인 실리주의 개방성은현대 사회에서 보기드문케이스라고 생각한다.실제로 유효한 원칙들을 적용하게 된다면몇 가지만 적용하여도의사결정 효율성을 높일 수 있다고 사료된다.</pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      <categories>
          
          <category> 독서 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>시작하기에 앞서</title>
      <link href="/2020/01/15/SICP/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0%EC%97%90%EC%95%9E%EC%84%9C/"/>
      <url>/2020/01/15/SICP/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0%EC%97%90%EC%95%9E%EC%84%9C/</url>
      
        <content type="html"><![CDATA[<p>해당 서적은 MIT에서 강의용으로 LISP의 방언인 Scheme 을 이용해서 프로그래밍의 기초를 알려주는 내용이다.<br>(물론 내용은 굉장히 어렵다는 것 같다.)</p><p>앞으로의 학습 내용은 해당 서적의<br>장별로 읽은 감상과 예제 문제풀이로 이루어질 것이다.<br>코드는 깃에 따로 올리겠다.</p><p>뭐 어디 인터넷에서 mit-scheme 이라는 것을 받아서 설치하긴 했다.</p><p>요 책을 잘 공부한다면<br>기초는 좀 튼튼해지지 않을까 싶다.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      <categories>
          
          <category> SICP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/01/15/dummy/"/>
      <url>/2020/01/15/dummy/</url>
      
        <content type="html"><![CDATA[<h1 id="제목"><a href="#제목" class="headerlink" title="제목"></a>제목</h1><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/01/15/linux/%EB%8B%A8%EC%B6%95%ED%82%A4/"/>
      <url>/2020/01/15/linux/%EB%8B%A8%EC%B6%95%ED%82%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="제목"><a href="#제목" class="headerlink" title="제목"></a>제목</h1><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/01/15/%EA%B0%9C%EC%9D%B8%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/%EA%B3%84%EC%82%B0%EA%B8%B0/"/>
      <url>/2020/01/15/%EA%B0%9C%EC%9D%B8%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/%EA%B3%84%EC%82%B0%EA%B8%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="제목"><a href="#제목" class="headerlink" title="제목"></a>제목</h1><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>메타인지</title>
      <link href="/2020/01/15/%EB%8B%A8%EC%83%81/%EB%A9%94%ED%83%80%EC%9D%B8%EC%A7%80/"/>
      <url>/2020/01/15/%EB%8B%A8%EC%83%81/%EB%A9%94%ED%83%80%EC%9D%B8%EC%A7%80/</url>
      
        <content type="html"><![CDATA[<h1 id="제목"><a href="#제목" class="headerlink" title="제목"></a>제목</h1><p>메타인지</p><pre>(html 태그가 맥히는지 테스트용으로 pre을 사용해 보았다.망할 sudo로 vscode를 실행시켰더니 갑자기 한글이 안맥히네..개소린 집어치우고.. 이정도면 pre 테스트가 됐으니까)메타인지에 대한 개념을 접한 것은 메타생각이라는 꽤나 오래전에 책을 읽으면서이다.나는 자기계발서적을 꽤나 많이 읽은 편이었는데..그 발단은 무언가 하고싶은 것이 생겼을 때그것을 할 수 있는 능력을 지니고 있는 것이다.어찌보면 무언가를 갖던가 하고 싶다기 보다는..능력이라는 것 자체를 가지고 싶었다고 본다.내가 가진 최초이자 최후의 자원은몸뚱아리와 대가리(생각)이기 때문에이를 잘 사용하기 위해서는 자기계발을 해야한다는 생각이 들었고,심하게 게으르고 날로 먹는 것을 좋아하는 나는남들보다 덜 하고 효과를 보기 위해서는최적화 효율화가 필요했다.(덕분에 행동경제학, 심리학 서적, 해부학 책, 명상 책 등등다른 사람들은 자기계발서라고 생각하지 않는 것도,개인적인 분류로는 자기계발 서적이라고 생각한다.비교적 비슷한 맥락의 미국식 모델링 자기계발 서적은보긴 했지만 그닥 좋아하지는 않는다.비슷한걸 여러번 볼 필요가 있나 싶기도 하다.)여튼 메타인지라는 것은 인지를 인지하는 것이다.사실상 명상이나 철학, 학습 등 많은 분야에서 들어난다.(취미로 위빠사나 명상을 한다.이떼 사띠하는 것이 메타인지라고 볼 수 있다.)공부를 잘하는 친구들예컨데 서울대, 카이스트 같은 곳을 가거나 한 친구들을 보면공통된 특징이 메타인지가 뛰어난 경우가 많다.사실상 대가리가 넘사벽으로 뛰어난 경우보다는 메타인지를 통해 자기최적화 + 공부 몰빵으로 대학을 잘 간 경우가 많지 않을까 예상한다.뭐 예컨데 멘사 회원을 기준으로 잡으면 대충 상위 2%라고 하면입시생들 중에 몇퍼나 충족되려나..여튼 대가리가 말도 안되게 좋으면놀아도 공부 잘할 수 있다.하지만 그런 경우는 적기 때문에메타인지를 키우고,최적의 생활패턴 학습모델을 개발하는 것이최고의 효율을 발휘할 수 있는 정석이라고 본다.뭐 다른 분야도 마찬가지이다.메타인지가 높다는 것은자기 객관화를 잘한다는 의미이며,확실한(인간은 확실히 아는 게 있을까 싶지만) 결과를 불러일으키는 '인과관계'를 파악해 그대로 행하고, 예측한대로의 결과를 비교적 얻어낸다.이때 보통 개인의 주관적인 생각이나 감정은 한켠에 놔둔다.위빠사나 명상에서는 관찰한다는 느낌이다.일어날 만한 일은 이 이유가 있으며,내 인생도 마찬가지다.나 같은 경우에는 프로그래밍을 하는데,졸라 못한다.많이 안해서 그렇다.그건 대충 팩트에 가깝다고 치고,메타인지를 가지고 이를 분석해 보려면이를 다 분해해볼 필요가 있다.먼저 프로그래밍을 잘한다는 것은 어떤 것을 의미하는 가를 생각해보자.잘한다는 것의 의미는 사람마다 굉장히 다를 수 있지만,대충 필요한 프로그램을일정 기간 내에 독립적으로 유지보수가 잘 되게, 보안도 잘 되게 만들 수 있는 능력이라고 치자.물론 기능은 필수이다.아 존나 애매하네 이게..여튼독립적으로 개발을 한다면,설정, 설계, 개발, 유지보수 모두 혼자 한다는 의미이다.java 같은 경우는 아니지만,OS 의존적일 수도 있고,환경에 대한 이해가 있어야 할 수 있을 것이다.흠.. 가장 큰 문제는 실제로 개발없이이론적인 서적이나 영상위주로 봤다는 것 같다.왜 실제 개발을 안했는가 하면,귀찮은 것그리고 잘 안될 것 같다는 두려움..초기 셋팅의 어려움 등등이 있다.그리고 실제 개인 프로젝트를 진행하면 좋은 점은목적물이 드러나고,필요한 내용을 찾는 것과,문제해결 능력,코딩에 대한 익숨함 상승 등이 있을 것이다.그리고 단순히 생각해보면,프로그래밍은 공학이다.순수학문으로 무언가를 발견하고 알아가기 위한 학문이 아니라,필요한 기능을 구현하려고 하는 목적을 지닌 영역이기 때문에당연히 무언가를 만드는 것이 목적이다.실제 성과가 드러나는 것이 개발 자체의 목적인 것 같다.(나는 사실 개발은 재미로 하는거고,겸사겸사 일로도 하려는 게 크긴 하다.앞으로 여러 글들을 쓸 예정이지만,대표적으로 SICP 라는 책을 읽고,예제 문제들을 구현해보려고 한다.컴퓨터로 수학문제를 푸는 것이 재밌을 것 같다고 생각하기도 한다.이는 실무와는 거리가 있을 수도 있다.)자 이제프로그래밍이 무엇이고,어떤 요소들이 있는지를 대충 고찰해보고자 한다.먼저 컴퓨터는반도체와 여러 부품들로 이루어져 있으며,1, 0 의 바이너리로 동작하며전기 신호에 따라데이터를 축적하고 연산하는 계산 장치다.복잡한 기능의 프로그램들은연산을 복잡하게 만들어서 그런 것이다.저수준으로 기능의 효율성 등을 파악하기 위해서는어셈블리를 본다던지,메모리의 특성 등을 이해할 필요가 있겠다.고수준의 언어에서 보자면,하여간 엄청 많은 종류의 언어가 있는데,거의 핵심적인 부분은 비슷하다.문법이나 자료구조 등등이 다르지만,기본적인 제어문은 if문 for문 등 핵심 제어문은 동일할 것이다.메모리 관리 여부에 따라서구분할 수도 있는 것 같은데자세한 언어간의 차이는 나는 모른다.(아는 것과 모르는 것을 제대로 분류하는 것도 메타인지다.사실 생각해보니내가 프로그래밍을 하는 이유는가장 독립적이고 유연한 재밌는 도구라서 이고,충동적으로 그때그때 호기심과 재밌는 요소들을단발적으로 보는게 주된 활동인 것 같기도 하다.수학이나 저수준 언어 회로 등에 대한 관심은추상적으로 내가 모르는 영역에서 핵심적인 연산이 일어나는 것이답답해서 잘 견디기 힘들어서 그런것도 같다.무언가를 알고 싶다는 호기심이 큰 것 같다.)웹개발자로 한 반년정도 실무에서 일해봤지만,(지금은 좀 쉬고있다.)아는 게 너무 없고,별로 재미가 없었다.설정 이런것들은 살펴볼 필요도 없었고,어느정도 이상 복잡성이 늘어난제어문은 생각해내기가 힘들었으며,뭐 그렇다.재미있게 생각한 점은String이라는 데이터이다.사실 컴퓨터는 숫자로 이루어져 있는데,프로그래밍에서는 많은 데이터가 스트링으로 되어있고,스트링을 다루는 기술이 중요하다는 건데스트링은 약속에 의해서특정 환경에서 특정 숫자에 특정 의미를 부여해준 것이다.사실상 웹개발 실무에서는 데이터를 string으로 처리하고,UI를 조작하고, 이벤트를 나타내고 이런 것들이지수학 계산 이런 것들은 잘 쓰이지 않는 것 같다.내가 실무에서 제일 아쉬웠던 점은중첩 반복문 구현을 잘 못해서,여러번 나열한 것이다.그 별것도 아닌것이 왜 생각이 안났을까?그리고 내가 머릿속으로 돌려본 시뮬레이션은실제 프로그래밍에서 다르게 동작하거나 안됐다.그것은 내가 프로그래밍적으로 사고하지 않고,내 직관적으로 사고했기 때문인 것 같다.이게 굉장히 중요하다.특히 그 부분은 쿼리에서 가장 두드러지게 느꼈으며,sql에 대해 얼마나 기초가 부족했고,큰 실수들을 할 여지가 있었는지에 대해서 생각하면,좆될 뻔했다는 생각을 한 것이 한두번이 아니다.그렇게 치면,현재의 웹개발, SI업계, 국비지원 교육에 대해서강도높은 성찰이 있어야 할 것 같은데..귀찮기 때문에나는 내 갈길을 가겠다.여튼 sql 공부용 책은 불친절한SQL프로그래밍이라는 책을 사긴 했다.갠적으론 맘에 드는 책이다.망할 서브쿼리와 조인 열댓개와 제약조건 이런것들이익숙하지 않은 상황에서 쿼리가 좆될 뻔했던 적이 많았다.쿼리라는 게 데이터가 행과 열로 된 테이블이라는 구조를 통해그것을 다루는 컴퓨터(?)랄까 이런걸 별도로 해놓은 건데..테이블 마다 의미가 있고, 조인의 의미가 있고,비즈니스 로직에 따라서 뭐 이차저차 해서비즈니스 로직이 중요한 것 같긴 하다.코드 짜는 패턴은 뭐 대충 비슷해지는 감이 있지만,업장 마다 비즈니스 로직과 요구사항이 있어서그걸 맞춰야 한다.이렇게 두서없이 글을 적는 이유는내가 의식의 흐름대로 생각하고,프로그래밍이라는 분야를 잘 모르기 때문인 것 같다.잘하고 싶지만,별로 노력도 하지 않았고,어떻게 노력하면 좋은지도 알지 못한다.들은 조언들 중에 가장 핵심적인 것은무언가를 만들어 보라는 것이었다.정확히 정의하고 왜인지는 모르겠지만,그게 가장 합리적인 말인 것 같다.뭘 만들기 시작해야겠다.프로그래밍은 따로 이것저것 정리하고,본래의 주제로 넘어와서 메타인지로 돌아와야겠다.보통의 사람은 많은 선입견에 쌓여있고,본인이 무엇을 알고, 무엇을 모르는지 인지하지 못하며,아는 것도 제대로 행동하지 않기 때문에원하는 방향대로 발전하지 못하는 것 같다.인간의 학습이나 복잡한 요소를 구성하는 것은대개는 간단하고 자명한 사실부터 시작한다.컴퓨터가 바이너리부터 간단한 계산 복잡한 프로그래밍에 이르기까지복잡성을 증가시켜 가는 것처럼.객관성을 가지기 위해서는 객관적인 결과물이 필요하다.데이터이다.다른 사람이 작성한 데이터 또는본인 스스로 작성한 데이터.데이터라는 것은 테스트(또는 실전)을 통해서나온 것이기 때문에인과를 반영한 현실이다.(물론 인과관계 자체를 엄밀히 파악하는 것은 매우 힘들다.)이를 정리해서 기록 혹은 암기를 한 후인과의 원인이라는 영역에 집어넣고 테스트(또는 실전)이 짓거리를 반복해가면서원하는 결과에 가까워 지는 것이보통의 활동이다.뭐 메타인지는 삶에서 좋은 도구로 유용하게 쓰일 수 있으니잘 발달시켜야겠다는 얘기다.끝.</pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      <categories>
          
          <category> 단상 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>돈의 감각 -이명로</title>
      <link href="/2020/01/12/%EB%8F%85%EC%84%9C/senseOfMoney/"/>
      <url>/2020/01/12/%EB%8F%85%EC%84%9C/senseOfMoney/</url>
      
        <content type="html"><![CDATA[<h1 id="제목"><a href="#제목" class="headerlink" title="제목"></a>제목</h1><p>통화(화폐)량을 중심으로 바라본 경제.</p><ol><li>돈이란 무엇인가?</li></ol><p>돈은 간단하게 말하면 거래의 수단이다.<br>하지만, 돈(통화)가 가지고 있는 특수성이 있기 때문에<br>이를 잘 인지해야 경제의 기본 관점을 가지고 경제를 바라볼 수 있다.<br>(귀찮기 때문에 금태환제의 폐지 등의 역사적 이슈는 생략한다.)</p><p>돈은 재화의 가격을 표시하는 수단으로 쓰이나,<br>따져보면 돈 = 빚 이라는 개념이 성립한다.<br>돈의 흐름은 다음과 같다.</p><p>중앙은행에서 발행<br>=&gt; 시중은행으로 유입(지금 준비율에 따라 보유고의 배수로 대출을 한다.)<br>=&gt; 정부, 기업, 가계 대출(뭐 투자도 하겠지)<br>=&gt; 시장에서 예금을 통해 풀린 돈이 은행으로 유입</p><p>이 짓거리의 반복이다.<br>만약 대출을 통해 시중에 풀린 돈을 경제주체가 꼭 쥐고 있는다면,<br>통화의 흐름이 끊겨, 승수효과가 발생하지 않는다.<br>부가가치(생산가치)의 확대에 돈이 고르게 분배되면<br>경제가 잘 돌아간다고 볼 수 있는게<br>원래 개념일텐데 현실은 좀 다르게 돌아간다.</p><ol start="2"><li>통화의 흐름.</li></ol><p>경제가 잘 돌아가려면 </p><ul><li>돈을 많이 공급하고</li><li>돈이 순환되어야 한다.</li></ul><p>시중에 통화가 늘어나는 이유는<br>누군가가 더 많은 돈을 빌려서 썼기 때문이다.<br>돈 = 빚 이기 때문에<br>돈(통화)이 늘었다는 것은 결국<br>빚이 늘어났다는 소리다.<br>(정부도 마찬가지다.)</p><p>흔히 가격이 오르는 것은<br>수요와 공급의 경제 논리로 이해하지만,<br>시중에 통화량이 늘어날 경우<br>화폐 자체가 덜 귀해지기 때문에<br>상대적으로 물가가 올라가는 효과가 나타난다.<br>근데 이때 모든 물건이 고르게 오르는 것이 아니고,<br>오르는 순서와 항목이 있다.</p><p>이 때 은행의 대출 매커니즘을 살펴보면,<br>주로 주택이나 대규모 생산시설, 자동차 등<br>목돈이 필요한 경우에 대출을 받는다.<br>그럼 부동산 가격등이 먼저 상승하고,<br>이런 재화들의 거래가 이루어지게 되면,<br>이 돈은 부동산업자, 건설회사, 자동차회사, 부품회사에 들어가고,<br>재투자 혹은 노동자들에게 분배되고 이런 식이다.</p><p>이런 사이클을 이해하고 있다면,<br>대출을 받아 오를 것이 예상되는 자산을 미리 매입하고 알박기 하고 있다가<br>(대출을 받는 우선순위도, 정부, 기관, 기업, 개인 순으로 정해져 있다.)<br>가격이 오르면 이것을 처분해서 돈을 번다.<br>해당 투자품목의 가격에 거품이 끼면<br>후순위로 높은 가격에 샀다가 사다리차기를 통해<br>뒤늦게 진입한 사람이 물리는 것인데<br>이때 대출을 받았는데 상환위협이 다가오게 되면,<br>파산을 한다.<br>이 짓거리가 연쇄적으로 크게 일어나면 디플레이션이 일어난다.</p><ol start="3"><li>금리와 환율</li></ol><p>금리는 중앙은행에서 정하는 기중금리가 핵심적인 나침반이다.<br>금리가 낮으면 돈을 많이 빌리기 쉽고,<br>금리가 높으면 돈을 빌리기 어려워진다.</p><p>중앙은행은 화폐의 흐름이 경색되어<br>물가지수가 적절하게 상승하지 않은 경우<br>이를 활성화 시키기 위해서 금리를 인하하곤 하는데,<br>이때 큰 지표가 되는 것이 GDP이다.<br>GDP = 가계지출 + 기업투자 + 정부지출 +(수출 - 수입)<br>인데,<br>결론적으로 국내에서 돈이 늘어난다는 건 가계부채, 기업부채, 정부부채가 늘어나야 하고,<br>해외에서 돈을 많이 벌어오려면 해외의 부채가 늘어나야 한다는 말이다.</p><p>경제성장이 지속되는 한 부채는 계속 늘어나게 되어 있는데,<br>이때 상환능력 역시 같이 상승이 되야 하는데,<br>그렇지 않은 경우가 많아서<br>경제가 좆망(경기침체)이 되는 경우가 많다.</p><p>콘트라티예프는 경제 사계절과<br>이자율 및 원자재 가격의 정점과 저점이 형성되는 것 사이의 연관성을 발견했으며,</p><p>해리 덴트는 인구 통계를 기반으로 경제 사이클을 파악한다.</p><p>뭐 여튼 경제가 사려면,<br>부동산이나 그딴 것보다<br>부가가치가 생산되는 요소에 적절히 돈이 흘러가고<br>경제주체의 소비력이 늘어나는 것이 관건인데,<br>그렇게 잘 안 된다.</p><p>돈은 수익이 되는 곳에 몰리게 되어 있고,<br>이것은 부동산이나 투기성 자본을 형성하는 경우가 많다.<br>그러면 기존의 자본을 가지고 있는 사람에게로<br>거래를 통해 다시 부가 재분배 되게 된다.<br>결국 구조적으로 부익부 빈익빈이다.</p><p>환율은 기본적으로는<br>외환보유고, 국가신용도, 경상수지<br>등을 종합해서 해당 국가 화폐의 신뢰도를 측정해서<br>달러와 해당국의 화폐의 교환비율을 나타낸 것이다.<br>(미국은 Fucking 기축통화고<br>이와 유사한 지위를 이용하는 것은<br>통화 무제한 swap가 체결되어있는 5개국이다.<br>일본, 캐나다, 영국 뭐 이런데다.)</p><ol start="4"><li>부동산이 상승하는 이유.</li></ol><p>일자리가 있으면<br>=&gt; 사람이 모이고<br>=&gt; 사람이 모이면 주택이 필요해진다.</p><p>이걸 기본으로 생각하면<br>대충 파악할 수 있다.</p><ol start="5"><li>정리 및 내 생각.</li></ol><p>체계적으로 정리하기 매우 귀찮았기 때문에<br>쌉소리를 많이 짓걸여 놨는데,<br>대충 맞는소리가 아닌가 추정한다.</p><p>여튼 개인적으로는<br>자급자족이 경제가 되는 상황을<br>조성했으면 싶다.</p><p>돈을 벌려면,<br>가격이 상승할 것 같은 자산에<br>미리 알박기 한 후에 팔면 된다.</p><p>이렇게 말하면 말은 쉽지만,<br>일반 개인이 하기에는<br>여러 여건이 힘들긴 하다.</p><p>근데 이 서적에 나온 것처럼<br>기본적으로 화폐의 개념의 정립,<br>경제사이클이 돌아가는 흐름을<br>기본으로 생각한다면,<br>전보다 더 나은 경제활동을 하는데<br>도움이 될 것이라고 생각한다.</p><p>그리고 역시, 정부, 언론, 전문가 등<br>믿을 놈이 하나 없다는 게 진실이다.<br>좆도 모르는 새끼가 태반이고,<br>알아도 속이는 새끼가 허다하다.</p><p>GDP만 해도 계량적인(화폐 측정 가능)<br>항목만 대상이고,<br>소비자물가지수도<br>부동산이나 임대료 등은 포함이 안되며,<br>항목도 지멋대로 매번 바꿔서<br>현실 물가와 괴리가 있다.<br>전통적인 경제모델은<br>공학적인 수식에 맞추기 위해서<br>현실을 무시한 측면이 많으며,<br>거래에는 개인의 심리가 들어가기 때문에<br>뒤죽박죽이다.</p><p>그니까 결론적으로 예측하기 힘든게 당연하다.</p><p>이번엔 여기까지 쓰고,<br>다음에 읽을 책은<br>원칙(principles) -레이 달리오<br>이다.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      <categories>
          
          <category> 독서 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
